{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\andal\\\\OneDrive\\\\Desktop\\\\Programming (Classes Too)\\\\Projects\\\\MMLLC-Website\\\\frontend\\\\frontend\\\\src\\\\FileHandler.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport './FileHandler.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction FileHandler() {\n  _s();\n  const [file, setFile] = useState(\"\");\n  const [fileWorksheet, setFileWorksheet] = useState(\"\");\n  const [wc, setWC] = useState(-1);\n  const [headerRow, setHeaderRow] = useState(-1);\n  var xlsx = require('xlsx');\n  function checkValid() {\n    if (headerRow >= 1) {\n      const submitData = xlsx.utils.sheet_to_json(fileWorksheet, {\n        range: headerRow - 1\n      }); //com uses 4\n      let result = [submitData[0]];\n      var ret = {};\n      for (var key in result[0]) {\n        ret[result[0][key]] = key;\n      }\n      return 'English Text' in ret;\n    }\n    return false;\n  }\n  function handleChange(event) {\n    event.preventDefault();\n    if (event.target.files) {\n      const reader = new FileReader();\n      reader.onload = event => {\n        const data = event.target.result;\n        const workbook = xlsx.read(data, {\n          type: \"array\"\n        });\n        const sheetName = workbook.SheetNames[0];\n        const worksheet = workbook.Sheets[sheetName];\n        setFileWorksheet(worksheet);\n        const txt = xlsx.utils.sheet_to_json(worksheet);\n        setFile(txt);\n      };\n      reader.readAsArrayBuffer(event.target.files[0]);\n    }\n  }\n  function handleSubmit(event) {\n    event.preventDefault();\n    if (checkValid()) {\n      const submitData = xlsx.utils.sheet_to_json(fileWorksheet, {\n        range: headerRow\n      }); //com uses 4\n\n      const config = {\n        headers: {\n          'Access-Control-Allow-Origin': '*'\n        }\n      };\n      axios.post(\"http://localhost:5000/files\", {\n        input: submitData\n      }, config).then(res => {\n        setWC(res.data);\n      }).catch(er => {\n        console.log(er);\n      });\n    } else {\n      alert(\"Wrong Header Row Selected\");\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"page\",\n    children: [typeof wc.wordCount !== 'undefined' && wc.wordCount.map((wordCount, i) => /*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"wordcount\",\n      children: [\"Word Count: \", wordCount]\n    }, i, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 11\n    }, this)), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Fill Out Form Below To Find Word Count!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"form\",\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Excel File Upload\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        accept: \".xlsx\",\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"numInput\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"What row in Excel has the exact text 'English Text'. It should be the same row right before the prompts starts.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          id: \"message\",\n          name: \"message\",\n          min: 1,\n          max: file.length,\n          placeholder: \"Enter number here\",\n          onChange: e => setHeaderRow(Number(e.target.value) - 1)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this), file === \"\" || setHeaderRow > file.length || setHeaderRow <= 0 ? /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        disabled: true,\n        children: \"Submit!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Submit!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 5\n  }, this);\n}\n_s(FileHandler, \"Ui5UxuD9KcslH08Kwv96zrdAAs8=\");\n_c = FileHandler;\nexport default FileHandler;\nvar _c;\n$RefreshReg$(_c, \"FileHandler\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","FileHandler","_s","file","setFile","fileWorksheet","setFileWorksheet","wc","setWC","headerRow","setHeaderRow","xlsx","require","checkValid","submitData","utils","sheet_to_json","range","result","ret","key","handleChange","event","preventDefault","target","files","reader","FileReader","onload","data","workbook","read","type","sheetName","SheetNames","worksheet","Sheets","txt","readAsArrayBuffer","handleSubmit","config","headers","post","input","then","res","catch","er","console","log","alert","className","children","wordCount","map","i","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","accept","onChange","id","name","min","max","length","placeholder","e","Number","value","disabled","_c","$RefreshReg$"],"sources":["C:/Users/andal/OneDrive/Desktop/Programming (Classes Too)/Projects/MMLLC-Website/frontend/frontend/src/FileHandler.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport './FileHandler.css'\r\n\r\nfunction FileHandler() {\r\n  const [file, setFile] = useState(\"\")\r\n  const [fileWorksheet, setFileWorksheet] = useState(\"\")\r\n  const [wc, setWC] = useState(-1)\r\n  const [headerRow, setHeaderRow] = useState(-1)\r\n\r\n  var xlsx = require('xlsx')\r\n\r\n  function checkValid() {\r\n    if (headerRow >= 1) {\r\n      const submitData = xlsx.utils.sheet_to_json(fileWorksheet, { range: headerRow - 1 }); //com uses 4\r\n      let result = [submitData[0]]\r\n\r\n      var ret = {};\r\n      for (var key in result[0]) {\r\n        ret[result[0][key]] = key;\r\n      }\r\n\r\n      return ('English Text' in ret);\r\n    }\r\n    return false\r\n  }\r\n\r\n  function handleChange(event) {\r\n    event.preventDefault();\r\n    if (event.target.files) {\r\n\r\n      const reader = new FileReader();\r\n      reader.onload = (event) => {\r\n        const data = event.target.result;\r\n        const workbook = xlsx.read(data, { type: \"array\" });\r\n        const sheetName = workbook.SheetNames[0];\r\n        const worksheet = workbook.Sheets[sheetName];\r\n        setFileWorksheet(worksheet)\r\n        const txt = xlsx.utils.sheet_to_json(worksheet);\r\n        setFile(txt)\r\n      };\r\n      reader.readAsArrayBuffer(event.target.files[0]);\r\n    }\r\n  }\r\n\r\n  function handleSubmit(event) {\r\n    event.preventDefault()\r\n\r\n    if (checkValid()) {\r\n      const submitData = xlsx.utils.sheet_to_json(fileWorksheet, { range: headerRow }); //com uses 4\r\n\r\n\r\n      const config = {\r\n        headers: { 'Access-Control-Allow-Origin': '*' }\r\n      };\r\n      axios\r\n        .post(\"http://localhost:5000/files\", {\r\n          input: submitData,\r\n        }, config)\r\n        .then((res) => {\r\n          setWC(res.data);\r\n        })\r\n        .catch((er) => {\r\n          console.log(er);\r\n        });\r\n    } else {\r\n      alert(\"Wrong Header Row Selected\")\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"page\">\r\n      {(typeof wc.wordCount !== 'undefined') &&(\r\n        wc.wordCount.map((wordCount, i) => (\r\n          <h1 className=\"wordcount\" key={i}>Word Count: {wordCount}</h1>\r\n        ))\r\n      )}\r\n      <h2>Fill Out Form Below To Find Word Count!</h2>\r\n      <form className=\"form\" onSubmit={handleSubmit}>\r\n        <h1>Excel File Upload</h1>\r\n        <input type=\"file\" accept=\".xlsx\" onChange={handleChange} />\r\n        <div className=\"numInput\">\r\n          <p>What row in Excel has the exact text 'English Text'. It should be the same row right before the prompts starts.</p>\r\n          <input\r\n            type=\"number\"\r\n            id=\"message\"\r\n            name=\"message\"\r\n            min={1}\r\n            max={file.length}\r\n            placeholder=\"Enter number here\"\r\n            onChange={(e) => setHeaderRow(Number(e.target.value) - 1)}\r\n          />\r\n        </div>\r\n        <br></br>\r\n\r\n        {(file === \"\" || setHeaderRow > file.length || setHeaderRow <= 0) ? (\r\n          <button type=\"submit\" disabled>Submit!</button>\r\n        ) : (\r\n          <button type=\"submit\">Submit!</button>\r\n        )}\r\n      </form>\r\n\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default FileHandler;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}