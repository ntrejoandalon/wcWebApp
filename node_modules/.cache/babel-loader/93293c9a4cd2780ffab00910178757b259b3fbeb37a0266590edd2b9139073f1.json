{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\andal\\\\OneDrive\\\\Desktop\\\\Programming (Classes Too)\\\\Projects\\\\MMLLC-Website\\\\frontend\\\\frontend\\\\src\\\\FileHandler.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport './App.css';\nimport { OutTable, ExcelRenderer } from 'react-excel-renderer';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction FileHandler() {\n  _s();\n  const [originalFile, setOriginalFile] = useState(\"\");\n  const [file, setFile] = useState(\"\");\n  const [fileWorksheet, setFileWorksheet] = useState(\"\");\n  const [wc, setWC] = useState(-1);\n  const [headerRow, setHeaderRow] = useState(-1);\n  const [renderRows, setRenderRows] = useState(null);\n  const [renderCols, setRenderCols] = useState(null);\n  var xlsx = require('xlsx');\n  function checkValid() {\n    if (headerRow >= 1) {\n      const submitData = xlsx.utils.sheet_to_json(fileWorksheet, {\n        range: headerRow - 1\n      }); //com uses 4\n      let result = [submitData[0]];\n      var ret = {};\n      for (var key in result[0]) {\n        ret[result[0][key]] = key;\n      }\n      return 'English Text' in ret;\n    }\n    return false;\n  }\n  function handleChange(event) {\n    setOriginalFile(event.target.files[0]);\n    event.preventDefault();\n    if (event.target.files) {\n      ExcelRenderer(fileObj, (err, resp) => {\n        if (err) {\n          console.log(err);\n        } else {\n          this.setState({\n            cols: resp.cols,\n            rows: resp.rows\n          });\n        }\n      });\n      const reader = new FileReader();\n      reader.onload = event => {\n        const data = event.target.result;\n        const workbook = xlsx.read(data, {\n          type: \"array\"\n        });\n        const sheetName = workbook.SheetNames[0];\n        const worksheet = workbook.Sheets[sheetName];\n        setFileWorksheet(worksheet);\n        const txt = xlsx.utils.sheet_to_json(worksheet);\n        setFile(txt);\n      };\n      reader.readAsArrayBuffer(event.target.files[0]);\n    }\n  }\n  function handleSubmit(event) {\n    event.preventDefault();\n    if (checkValid()) {\n      const submitData = xlsx.utils.sheet_to_json(fileWorksheet, {\n        range: headerRow\n      }); //com uses 4\n\n      const config = {\n        headers: {\n          'Access-Control-Allow-Origin': '*'\n        }\n      };\n      axios.post(\"http://localhost:5000/files\", {\n        input: submitData\n      }, config).then(res => {\n        setWC(res.data);\n      }).catch(er => {\n        console.log(er);\n      });\n    } else {\n      alert(\"Wrong Header Row Selected\");\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"page\",\n    children: [typeof wc.wordCount === 'undefined' ? /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Fill Out Form Below To Find Word Count!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 9\n    }, this) : wc.wordCount.map((wordCount, i) => /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Word Count: \", wordCount, \"!\"]\n    }, i, true, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 11\n    }, this)), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Excel File Upload\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        accept: \".xlsx\",\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"What row in Excel has the exact text 'English Text'. It should be the same row right before the prompts starts.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        id: \"message\",\n        name: \"message\",\n        min: 1,\n        max: file.length,\n        onChange: e => setHeaderRow(Number(e.target.value) - 1)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this), file === \"\" || setHeaderRow > file.length || setHeaderRow <= 0 ? /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        disabled: true,\n        children: \"Submit!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Submit!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 89,\n    columnNumber: 5\n  }, this);\n}\n_s(FileHandler, \"5nNCDO2d5eHGGlM6oAN0cEqHmSc=\");\n_c = FileHandler;\nexport default FileHandler;\nvar _c;\n$RefreshReg$(_c, \"FileHandler\");","map":{"version":3,"names":["React","useState","axios","OutTable","ExcelRenderer","jsxDEV","_jsxDEV","FileHandler","_s","originalFile","setOriginalFile","file","setFile","fileWorksheet","setFileWorksheet","wc","setWC","headerRow","setHeaderRow","renderRows","setRenderRows","renderCols","setRenderCols","xlsx","require","checkValid","submitData","utils","sheet_to_json","range","result","ret","key","handleChange","event","target","files","preventDefault","fileObj","err","resp","console","log","setState","cols","rows","reader","FileReader","onload","data","workbook","read","type","sheetName","SheetNames","worksheet","Sheets","txt","readAsArrayBuffer","handleSubmit","config","headers","post","input","then","res","catch","er","alert","className","children","wordCount","fileName","_jsxFileName","lineNumber","columnNumber","map","i","onSubmit","accept","onChange","id","name","min","max","length","e","Number","value","disabled","_c","$RefreshReg$"],"sources":["C:/Users/andal/OneDrive/Desktop/Programming (Classes Too)/Projects/MMLLC-Website/frontend/frontend/src/FileHandler.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport './App.css'\r\nimport { OutTable, ExcelRenderer } from 'react-excel-renderer';\r\n\r\nfunction FileHandler() {\r\n  const [originalFile, setOriginalFile] = useState(\"\")\r\n  const [file, setFile] = useState(\"\")\r\n  const [fileWorksheet, setFileWorksheet] = useState(\"\")\r\n  const [wc, setWC] = useState(-1)\r\n  const [headerRow, setHeaderRow] = useState(-1)\r\n  const [renderRows, setRenderRows] = useState(null)\r\n  const [renderCols, setRenderCols] = useState(null)\r\n\r\n  var xlsx = require('xlsx')\r\n\r\n\r\n  function checkValid() {\r\n    if (headerRow >= 1) {\r\n      const submitData = xlsx.utils.sheet_to_json(fileWorksheet, { range: headerRow - 1 }); //com uses 4\r\n      let result = [submitData[0]]\r\n\r\n      var ret = {};\r\n      for (var key in result[0]) {\r\n        ret[result[0][key]] = key;\r\n      }\r\n\r\n      return ('English Text' in ret);\r\n    }\r\n    return false\r\n  }\r\n\r\n  function handleChange(event) {\r\n    setOriginalFile(event.target.files[0])\r\n    event.preventDefault();\r\n    if (event.target.files) {\r\n      ExcelRenderer(fileObj, (err, resp) => {\r\n        if(err){\r\n          console.log(err);            \r\n        }\r\n        else{\r\n          this.setState({\r\n            cols: resp.cols,\r\n            rows: resp.rows\r\n          });\r\n        }\r\n      });            \r\n\r\n      const reader = new FileReader();\r\n      reader.onload = (event) => {\r\n        const data = event.target.result;\r\n        const workbook = xlsx.read(data, { type: \"array\" });\r\n        const sheetName = workbook.SheetNames[0];\r\n        const worksheet = workbook.Sheets[sheetName];\r\n        setFileWorksheet(worksheet)\r\n        const txt = xlsx.utils.sheet_to_json(worksheet);\r\n        setFile(txt)\r\n      };\r\n      reader.readAsArrayBuffer(event.target.files[0]);\r\n    }\r\n  }\r\n\r\n  function handleSubmit(event) {\r\n    event.preventDefault()\r\n\r\n    if (checkValid()) {\r\n      const submitData = xlsx.utils.sheet_to_json(fileWorksheet, { range: headerRow }); //com uses 4\r\n\r\n\r\n      const config = {\r\n        headers: { 'Access-Control-Allow-Origin': '*' }\r\n      };\r\n      axios\r\n        .post(\"http://localhost:5000/files\", {\r\n          input: submitData,\r\n        }, config)\r\n        .then((res) => {\r\n          setWC(res.data);\r\n        })\r\n        .catch((er) => {\r\n          console.log(er);\r\n        });\r\n    } else {\r\n      alert(\"Wrong Header Row Selected\")\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"page\">\r\n      {(typeof wc.wordCount === 'undefined') ? (\r\n        <h2>Fill Out Form Below To Find Word Count!</h2>\r\n      ) : (\r\n        wc.wordCount.map((wordCount, i) => (\r\n          <h2 key={i}>Word Count: {wordCount}!</h2>\r\n        ))\r\n      )}\r\n\r\n      <form onSubmit={handleSubmit}>\r\n        <h1>Excel File Upload</h1>\r\n        <input type=\"file\" accept=\".xlsx\" onChange={handleChange} />\r\n\r\n        <br></br>\r\n        <p>What row in Excel has the exact text 'English Text'. It should be the same row right before the prompts starts.</p>\r\n        <input\r\n          type=\"number\"\r\n          id=\"message\"\r\n          name=\"message\"\r\n          min={1}\r\n          max={file.length}\r\n          onChange={(e) => setHeaderRow(Number(e.target.value) - 1)}\r\n        />\r\n        <br></br>\r\n\r\n        {(file === \"\" || setHeaderRow > file.length || setHeaderRow <= 0) ? (\r\n          <button type=\"submit\" disabled>Submit!</button>\r\n        ) : (\r\n          <button type=\"submit\">Submit!</button>\r\n        )}\r\n      </form>\r\n\r\n      {/* {(renderRows != null && renderCols != null) ? (\r\n        <p>upload file first to see spreadsheet</p>\r\n      ) : (\r\n        <OutTable data={renderRows} columns={renderCols} tableClassName=\"ExcelTable2007\" tableHeaderRowClass=\"heading\" />\r\n      )} */}\r\n\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default FileHandler;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}