{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\andal\\\\OneDrive\\\\Desktop\\\\Programming (Classes Too)\\\\Projects\\\\MMLLC-Website\\\\frontend\\\\frontend\\\\src\\\\FileHandler.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport './App.css';\nimport { IonInput, IonItem, IonList } from '@ionic/react';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction FileHandler() {\n  _s();\n  const [file, setFile] = useState(\"\");\n  const [fileWorksheet, setFileWorksheet] = useState(\"\");\n  const [wc, setWC] = useState(-1);\n  const [headerRow, setHeaderRow] = useState(-1);\n  var xlsx = require('xlsx');\n  const wrongRow = () => toast(\"Wrong header row!\");\n  function checkValid() {\n    if (headerRow >= 1) {\n      const submitData = xlsx.utils.sheet_to_json(fileWorksheet, {\n        range: headerRow - 1\n      }); //com uses 4\n      let result = [submitData[0]];\n      var ret = {};\n      for (var key in result[0]) {\n        ret[result[0][key]] = key;\n      }\n      return 'English Text' in ret;\n    }\n    return false;\n  }\n  function handleChange(event) {\n    setFile(event.target.files[0]);\n    event.preventDefault();\n    if (event.target.files) {\n      const reader = new FileReader();\n      reader.onload = event => {\n        const data = event.target.result;\n        const workbook = xlsx.read(data, {\n          type: \"array\"\n        });\n        const sheetName = workbook.SheetNames[0];\n        const worksheet = workbook.Sheets[sheetName];\n        setFileWorksheet(worksheet);\n        const txt = xlsx.utils.sheet_to_json(worksheet);\n        setFile(txt);\n      };\n      reader.readAsArrayBuffer(event.target.files[0]);\n    }\n  }\n  function handleSubmit(event) {\n    event.preventDefault();\n    if (checkValid()) {\n      console.log(headerRow);\n      console.log(typeof headerRow);\n      const submitData = xlsx.utils.sheet_to_json(fileWorksheet, {\n        range: headerRow\n      }); //com uses 4\n\n      const config = {\n        headers: {\n          'Access-Control-Allow-Origin': '*'\n        }\n      };\n      axios.post(\"http://localhost:5000/files\", {\n        input: submitData\n      }, config).then(res => {\n        setWC(res.data);\n      }).catch(er => {\n        console.log(er);\n      });\n    } else {\n      wrongRow();\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"page\",\n    children: [typeof wc.wordCount === 'undefined' ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"NO COUNT FILL OUT BELOW\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 9\n    }, this) : wc.wordCount.map((wordCount, i) => /*#__PURE__*/_jsxDEV(\"p\", {\n      children: wordCount\n    }, i, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 11\n    }, this)), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"React File Upload\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        accept: \".xlsx\",\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Follow Up Questions!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(IonItem, {\n        children: /*#__PURE__*/_jsxDEV(IonInput, {\n          label: \"Write number of header line (has the exact text 'English Text')\",\n          type: \"number\",\n          placeholder: \"0\",\n          min: 1,\n          max: file.length,\n          onIonChange: e => setHeaderRow(Number(e.target.value) - 1)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this), file === \"\" || setHeaderRow > file.length || setHeaderRow <= 0 ? /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        disabled: true,\n        children: \"Submit!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Submit!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 5\n  }, this);\n}\n_s(FileHandler, \"Ui5UxuD9KcslH08Kwv96zrdAAs8=\");\n_c = FileHandler;\nexport default FileHandler;\nvar _c;\n$RefreshReg$(_c, \"FileHandler\");","map":{"version":3,"names":["React","useState","useEffect","axios","IonInput","IonItem","IonList","ToastContainer","toast","jsxDEV","_jsxDEV","FileHandler","_s","file","setFile","fileWorksheet","setFileWorksheet","wc","setWC","headerRow","setHeaderRow","xlsx","require","wrongRow","checkValid","submitData","utils","sheet_to_json","range","result","ret","key","handleChange","event","target","files","preventDefault","reader","FileReader","onload","data","workbook","read","type","sheetName","SheetNames","worksheet","Sheets","txt","readAsArrayBuffer","handleSubmit","console","log","config","headers","post","input","then","res","catch","er","className","children","wordCount","fileName","_jsxFileName","lineNumber","columnNumber","map","i","onSubmit","accept","onChange","label","placeholder","min","max","length","onIonChange","e","Number","value","disabled","_c","$RefreshReg$"],"sources":["C:/Users/andal/OneDrive/Desktop/Programming (Classes Too)/Projects/MMLLC-Website/frontend/frontend/src/FileHandler.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport './App.css'\r\nimport { IonInput, IonItem, IonList } from '@ionic/react';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\nfunction FileHandler() {\r\n  const [file, setFile] = useState(\"\")\r\n  const [fileWorksheet, setFileWorksheet] = useState(\"\")\r\n  const [wc, setWC] = useState(-1)\r\n  const [headerRow, setHeaderRow] = useState(-1)\r\n  var xlsx = require('xlsx')\r\n  const wrongRow = () => toast(\"Wrong header row!\");\r\n\r\n\r\n  function checkValid() {\r\n    if (headerRow >= 1) {\r\n      const submitData = xlsx.utils.sheet_to_json(fileWorksheet, { range: headerRow - 1 }); //com uses 4\r\n      let result = [submitData[0]]\r\n\r\n      var ret = {};\r\n      for (var key in result[0]) {\r\n        ret[result[0][key]] = key;\r\n      }\r\n\r\n      return ('English Text' in ret);\r\n    }\r\n    return false\r\n  }\r\n\r\n  function handleChange(event) {\r\n    setFile(event.target.files[0])\r\n    event.preventDefault();\r\n    if (event.target.files) {\r\n      const reader = new FileReader();\r\n      reader.onload = (event) => {\r\n        const data = event.target.result;\r\n        const workbook = xlsx.read(data, { type: \"array\" });\r\n        const sheetName = workbook.SheetNames[0];\r\n        const worksheet = workbook.Sheets[sheetName];\r\n        setFileWorksheet(worksheet)\r\n        const txt = xlsx.utils.sheet_to_json(worksheet);\r\n        setFile(txt)\r\n      };\r\n      reader.readAsArrayBuffer(event.target.files[0]);\r\n    }\r\n  }\r\n\r\n  function handleSubmit(event) {\r\n    event.preventDefault()\r\n\r\n    if (checkValid()) {\r\n      console.log(headerRow)\r\n      console.log(typeof (headerRow))\r\n      const submitData = xlsx.utils.sheet_to_json(fileWorksheet, { range: headerRow }); //com uses 4\r\n  \r\n  \r\n      const config = {\r\n        headers: { 'Access-Control-Allow-Origin': '*' }\r\n      };\r\n      axios\r\n        .post(\"http://localhost:5000/files\", {\r\n          input: submitData,\r\n        }, config)\r\n        .then((res) => {\r\n          setWC(res.data);\r\n        })\r\n        .catch((er) => {\r\n          console.log(er);\r\n        });\r\n    } else {\r\n      wrongRow()\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"page\">\r\n      {(typeof wc.wordCount === 'undefined') ? (\r\n        <p>NO COUNT FILL OUT BELOW</p>\r\n      ) : (\r\n        wc.wordCount.map((wordCount, i) => (\r\n          <p key={i}>{wordCount}</p>\r\n        ))\r\n      )}\r\n\r\n      <form onSubmit={handleSubmit}>\r\n        <h1>React File Upload</h1>\r\n        <input type=\"file\" accept=\".xlsx\" onChange={handleChange} />\r\n\r\n        <br></br>\r\n        <p>Follow Up Questions!</p>\r\n        <IonItem>\r\n          <IonInput label=\"Write number of header line (has the exact text 'English Text')\" type=\"number\" placeholder=\"0\" min={1} max={file.length} onIonChange={(e) => setHeaderRow(Number(e.target.value) - 1)}></IonInput>\r\n        </IonItem>\r\n\r\n        {(file === \"\" || setHeaderRow > file.length || setHeaderRow <= 0) ? (\r\n          <button type=\"submit\" disabled>Submit!</button>\r\n        ) : (\r\n          <button type=\"submit\">Submit!</button>\r\n        )}\r\n      </form>\r\n\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default FileHandler;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}